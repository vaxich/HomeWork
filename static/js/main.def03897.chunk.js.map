{"version":3,"sources":["p2-homeworks/h5/Header.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/pages/JuniorPlus.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/AlternativeMessage.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/AlternativeAffairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/AlternativeGreeting.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Error404","Junior","JuniorPlus","Message","props","className","s","message__background","__left","message__avatar","src","avatar","alt","message__right","message__chat","message__name","name","message__message","message","message__time__out","message__time","time","AlternativeMessage","message__name__alt","messageData","AlternativeMessageData","HW1","Affair","affair","priority","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","setFilter","AlternativeAffairs","useState","id","title","isDone","updateAffair","setUpdateAffair","filterAffair","setFilterAffair","filteredAffair","filter","changeStatusAffair","value","mappedAlternativeAffairs","type","checked","removeAffairs","defaultAffairs","HW2","affairs","setAffairs","filteredAffairs","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","inputClass","console","log","onChange","GreetingContainer","users","addUserCallback","setName","setError","length","e","currentTarget","trim","alert","AlternativeGreeting","people","setPeople","totalPeople","newArrayUsers","v1","addTotalPeople","HW3","setUsers","SuperInputText","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","errorInput","key","SuperButton","red","finalClassName","default","SuperCheckbox","setChecked","children","checkbox","HW4","text","setText","showAlert","column","blue","disabled","PreJunior","PATH","Routes","path","exact","render","to","Header","header","link","activeClassName","active","block","HW5","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.def03897.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Header_link__2uoyf\",\"active\":\"Header_active__1JmHq\",\"block\":\"Header_block__3VPL0\",\"header\":\"Header_header__3ssIG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__2LoY4\",\"column\":\"HW4_column__1Q3zu\",\"testSpanError\":\"HW4_testSpanError__3GKrD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__3ZMGp\",\"error\":\"Greeting_error__3Lizh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__3Ehx2\",\"errorInput\":\"SuperInputText_errorInput__2FsIV\",\"error\":\"SuperInputText_error__ArKij\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__3dJO9\",\"red\":\"SuperButton_red__2lLrg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__YIASF\",\"spanClassName\":\"SuperCheckbox_spanClassName__1Rz6z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__WzZta\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message__background\":\"Message_message__background__5FbSZ\",\"message__avatar\":\"Message_message__avatar__2cT9Q\",\"message__right\":\"Message_message__right__1ER-Z\",\"message__name\":\"Message_message__name__3g8kf\",\"message__name__alt\":\"Message_message__name__alt__MuuO-\",\"message__chat\":\"Message_message__chat__S9WAm\",\"message__message\":\"Message_message__message__2usUK\",\"message__time\":\"Message_message__time__256ba\",\"message__time__out\":\"Message_message__time__out__3m8OG\"};","import React from 'react'\r\n\r\nfunction Error404() {\r\n    return (\r\n        <div>\r\n            <div>404</div>\r\n            <div>Page not found!</div>\r\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error404\r\n","import React from \"react\";\r\n\r\nfunction Junior() {\r\n    return (\r\n        <div>\r\n            Junior\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Junior","import React from \"react\";\r\n\r\nfunction JuniorPlus() {\r\n    return (\r\n        <div>\r\n            JuniorPlus\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default JuniorPlus","import React from 'react';\r\nimport s from \"./Message.module.css\";\r\n\r\n\r\n\r\n\r\ntype propsType = {\r\n    avatar: string,\r\n    name: string,\r\n    message: string,\r\n    time: string\r\n}\r\n\r\nfunction Message(props: propsType) {\r\n    return (\r\n        <div>\r\n            <div className={s.message__background}>\r\n                <div className={s.__left}>\r\n                    <img className={s.message__avatar} src={props.avatar} alt=\"\" />\r\n                </div>\r\n                <div className={s.message__right}>\r\n                    <div className={s.message__chat}>\r\n                        <p className={s.message__name}>{props.name}</p>\r\n                        <p className={s.message__message}>{props.message}</p>\r\n                    </div>\r\n                    <div className={s.message__time__out}>\r\n                        <p className={s.message__time}>{props.time}</p>\r\n                    </div>\r\n\r\n                </div >\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react';\r\nimport s from './Message.module.css';\r\n//\r\n\r\n\r\n\r\ntype propsType = {\r\n    avatar: string,\r\n    name: string,\r\n    message: string,\r\n    time: string\r\n}\r\n\r\nfunction AlternativeMessage(props:propsType) {\r\n    return (\r\n        <div>\r\n            <div className={s.message__background}>\r\n                <div className={s.__left}>\r\n                    <img className={s.message__avatar} src={props.avatar} alt=\"\" />\r\n                </div>\r\n                <div className={s.message__right}>\r\n                    <div className={s.message__chat}>\r\n                        <p className={s.message__name__alt}>{props.name}</p>\r\n                        <p className={s.message__message}>{props.message}</p>\r\n                    </div>\r\n                    <div className={s.message__time__out}>\r\n                        <p className={s.message__time}>{props.time}</p>\r\n                    </div>\r\n\r\n                </div >\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AlternativeMessage\r\n","import React from 'react'\r\nimport Message from './Message';\r\nimport AlternativeMessage from \"./AlternativeMessage\";\r\n\r\n\r\n\r\n\r\nconst messageData = {\r\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\r\n    name: 'Some Name',\r\n    message: 'some text',\r\n    time: '22:00',\r\n}\r\nconst AlternativeMessageData = {\r\n    avatar: 'https://klike.net/uploads/posts/2019-03/1551511801_1.jpg',\r\n    name: 'Pavel',\r\n    message: 'тут текст',\r\n    time: '23:00',\r\n}\r\n\r\nfunction HW1() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 1\r\n\r\n            should work (должно работать)\r\n\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />\r\n\r\n             <hr/>\r\n            для личного творчества, могу проверить\r\n\r\n\r\n            <AlternativeMessage\r\n                avatar={AlternativeMessageData.avatar}\r\n                name={AlternativeMessageData.name}\r\n                message={AlternativeMessageData.message}\r\n                time={AlternativeMessageData.time}\r\n            />\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW1\r\n","import React from 'react'\r\nimport { AffairType } from './HW2'\r\n\r\ntype AffairPropsType = {\r\n    // key не нужно типизировать\r\n    affair:AffairType // need to fix any\r\n\r\n\r\n    deleteAffairCallback: (id:number) => void // need to fix any\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n    const deleteCallback = () => {props.deleteAffairCallback(props.affair._id)}// need to fix\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <ul>\r\n                <li key={props.affair._id}>{props.affair.name} {props.affair.priority}  <button onClick={deleteCallback}>X</button></li>\r\n            </ul>\r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affair\r\n\r\n\r\n","import React from 'react'\r\nimport Affair from './Affair'\r\nimport { AffairType,FilterType} from './HW2'\r\n\r\ntype AffairsPropsType = { // need to fix any\r\n    data: AffairType[]\r\n    setFilter: (filter: FilterType) => void\r\n    deleteAffairCallback: (id:number) => void\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n    const mappedAffairs = props.data.map((a: AffairType) => (\r\n        <Affair // should work\r\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n    const setAll    = () => {  props.setFilter(\"all\")} // need to fix\r\n    const setHigh   = () => {  props.setFilter(\"high\")}\r\n    const setMiddle = () => {  props.setFilter(\"middle\")}\r\n    const setLow    = () => { props.setFilter(\"low\")}\r\n\r\n    \r\n    \r\n    return (\r\n        <div>\r\n            \r\n            \r\n            {mappedAffairs}\r\n\r\n            <button onClick={setAll}>All</button>\r\n            <button onClick={setHigh}>High</button>\r\n            <button onClick={setMiddle}>Middle</button>\r\n            <button onClick={setLow}>Low</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affairs\r\n","import React, {useState} from 'react'\r\n// import {AffairType} from \"./HW2\";\r\n// import Affair from \"./Affair\";\r\n// import any = jasmine.any;\r\n\r\ntype AlternativeAffairsType = {\r\n    id: number\r\n    title: string\r\n    isDone: boolean\r\n}\r\ntype statusAffairs = \"All\" | \"Куплено\" | \"Купить\"\r\n\r\nfunction AlternativeAffairs() {\r\n    let defaultAffairs: AlternativeAffairsType[] = [ // основной массив\r\n        {id: 1, title: 'молоко', isDone: true},\r\n        {id: 2, title: 'хлеб', isDone: false},\r\n        {id: 3, title: 'пряники', isDone: true},\r\n        {id: 4, title: 'сигареты', isDone: true},\r\n        {id: 5, title: 'вкусняшки', isDone: false}\r\n    ]\r\n\r\n\r\n    let [updateAffair, setUpdateAffair] = useState<Array<AlternativeAffairsType>> (defaultAffairs)\r\n\r\n    let [filterAffair, setFilterAffair] = useState<statusAffairs>(\"All\");\r\n    let filteredAffair = updateAffair;\r\n\r\n    if(filterAffair === \"Куплено\") {\r\n        filteredAffair = filteredAffair.filter(affair => affair.isDone === true)\r\n    }\r\n    if(filterAffair === \"Купить\") {\r\n        filteredAffair = filteredAffair.filter(affair => affair.isDone === false)\r\n    }\r\n\r\n    const removeAffairs =(id: number) => { // удалить\r\n        const updateAffair = filteredAffair.filter(affair => affair.id !== id)\r\n\r\n        setUpdateAffair(updateAffair);\r\n    }\r\n\r\n    const changeStatusAffair =(value: statusAffairs) => {\r\n        setFilterAffair(value);\r\n\r\n    }\r\n\r\n\r\n    const mappedAlternativeAffairs = filteredAffair.map(affair => {  // мапим\r\n\r\n        return (\r\n            <li><input type=\"checkbox\" checked={affair.isDone} /><span>{affair.title}</span> <button onClick= { () =>removeAffairs(affair.id)} > x</button> </li>\r\n        )\r\n    })\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n            {mappedAlternativeAffairs}\r\n            <button onClick={ ()=> {changeStatusAffair(\"All\")}}> Все </button>\r\n            <button onClick={ ()=> {changeStatusAffair(\"Куплено\")}}> Куплено </button>\r\n            <button onClick={ ()=> {changeStatusAffair(\"Купить\")}}> Надо купить </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AlternativeAffairs\r\n","import React, {useState} from 'react'\r\nimport Affairs from './Affairs'\r\nimport AlternativeAffairs from \"./AlternativeAffairs\";\r\n\r\n// types\r\nexport type AffairPriorityType =  'high' | 'low' | 'middle' ;\r\nexport type AffairType = {\r\n    _id:number,\r\n    name:string,\r\n    priority:AffairPriorityType\r\n}\r\nexport type FilterType =  'all' | AffairPriorityType\r\n\r\n// constants\r\nconst defaultAffairs: AffairType[] = [ // need to fix any\r\n    {_id: 1, name: 'React', priority: 'high'},\r\n    {_id: 2, name: 'anime', priority: 'low'},\r\n    {_id: 3, name: 'games', priority: 'low'},\r\n    {_id: 4, name: 'work', priority: 'high'},\r\n    {_id: 5, name: 'html & css', priority: 'middle'},\r\n]\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: AffairType[], filter:FilterType): AffairType[] => { // need to fix any\r\n    if (filter === 'all') {\r\n        return affairs\r\n    }\r\n\r\n    if (filter === 'high') {\r\n        return affairs.filter((affair: AffairType) => affair.priority === 'high')\r\n    }\r\n    if (filter === 'middle') {\r\n        return affairs.filter((affair: AffairType) => affair.priority === 'middle')\r\n    }\r\n\r\n    else  \r\n        return  affairs.filter((affair: AffairType) => affair.priority === 'low')\r\n    } // need to fix\r\n\r\nexport const deleteAffair = (affairs: AffairType[], _id: number): AffairType[] => { // need to fix any\r\n    return affairs.filter((affair: AffairType) => affair._id != _id)// need to fix\r\n}\r\n\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState<AffairType[]>(defaultAffairs) // need to fix any\r\n    const [filter, setFilter] = useState<FilterType>('all')\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter)\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 2\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Affairs\r\n                data={filteredAffairs}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            <AlternativeAffairs/>\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW2\r\n","import React, { ChangeEventHandler, MouseEventHandler } from 'react'\r\nimport s from './Greeting.module.css'\r\n\r\ntype GreetingPropsType = {\r\n    name: string // need to fix any\r\n    setNameCallback: ChangeEventHandler<HTMLInputElement> // need to fix any\r\n    addUser: MouseEventHandler // need to fix any\r\n    error: string // need to fix any\r\n    totalUsers: number // need to fix any\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\r\n) => {\r\n    const inputClass = s.error // need to fix with (?:)\r\n    console.log(error);\r\n    \r\n    return (\r\n        <div>\r\n            <input value={name} onChange={setNameCallback} className={error? inputClass : \"\"} />    \r\n            <span>{error}</span>\r\n            <button onClick={addUser}>add</button>\r\n            <span>{totalUsers}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Greeting\r\n\r\n//className={error ? \"error\" : \"\"}","import React, { ChangeEventHandler, useState } from 'react'\r\nimport Greeting from './Greeting'\r\nimport { UserType } from './HW3'\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: Array<UserType> // need to fix any\r\n    addUserCallback: (name:string) => void // need to fix any\r\n\r\n}\r\n\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({ users, addUserCallback }) => { // деструктуризация пропсов\r\n    const [name, setName] = useState<string>('') // need to fix any\r\n    const [error, setError] = useState<string>('') // need to fix any\r\n\r\n\r\n    const setNameCallback: ChangeEventHandler<HTMLInputElement> = (e) => { // need to fix any\r\n\r\n        setName(e.currentTarget.value) // need to fix\r\n\r\n\r\n    }\r\n    const addUser = () => {\r\n        if (name.trim() !== \"\") {\r\n            addUserCallback(name);\r\n            setError(\"\");\r\n            alert(\"hello\" + \"   \" + name) // need to fix\r\n            setName(\"\");\r\n        } else {\r\n            setError(\"поле не может быть пустым\");\r\n        }\r\n    }\r\n\r\n    const totalUsers = users.length // need to fix\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n        />\r\n    )\r\n}\r\n\r\nexport default GreetingContainer\r\n","import React, {ChangeEventHandler, useState} from \"react\";\r\nimport s from './Greeting.module.css'\r\nimport {v1} from \"uuid\";\r\nimport {UserType} from \"./HW3\";\r\n\r\n\r\n\r\nfunction AlternativeGreeting() {\r\n    const inputClass = s.error\r\n    const [error, setError] = useState<string>('')// хук ошибки\r\n    const [name, setName] = useState<string>('') // хук инпута\r\n    const [people, setPeople] = useState<Array<UserType>>([]) // хук кол-ва людей\r\n\r\n    const addTotalPeople = (name: string) => {\r\n        {\r\n            let newUser = {_id:v1(), name:name}\r\n            let newArrayUsers = [ newUser, ...people]\r\n            setPeople(newArrayUsers)\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n    const setNewName: ChangeEventHandler<HTMLInputElement> = (e) => {\r\n\r\n        setName(e.currentTarget.value)\r\n    }\r\n    const addPeople = () => {\r\n        if (name.trim() !== \"\") {\r\n            addTotalPeople(name);\r\n            setError(\"\");\r\n            alert(\"hello\" + \"   \" + name) // need to fix\r\n            setName(\"\");\r\n        } else {\r\n            setError(\"поле не может быть пустым\");\r\n        }\r\n    }\r\n    const totalPeople = people.length\r\n    return (\r\n        <div>\r\n            <input value={name} onChange={setNewName} className={error? inputClass : \"\"} />\r\n            <span>{error}</span>\r\n            <button onClick={addPeople}>добавить</button>\r\n            <span>{totalPeople}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AlternativeGreeting;\r\n","import React, {useState} from 'react'\r\nimport GreetingContainer from './GreetingContainer'\r\nimport { v1 } from 'uuid';\r\nimport AlternativeGreeting from \"./AlternativeGreeting\";\r\n\r\n// types\r\nexport type UserType = {\r\n    _id: string // need to fix any\r\n    name: string // need to fix any\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n    const [users, setUsers] = useState<Array<UserType>>([]) // need to fix any\r\n\r\n    const addUserCallback = (name: string) => { // need to fix any\r\n        {\r\n            let newUser = {_id:v1(), name:name}\r\n            let newArrayUsers = [ newUser, ...users]\r\n            setUsers(newArrayUsers) // need to fix\r\n            \r\n        } \r\n        \r\n        \r\n        \r\n    }\r\n        \r\n        console.log(users);\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 3\r\n\r\n            {/*should work (должно работать)*/}\r\n            <GreetingContainer users={users} addUserCallback={addUserCallback} />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            <AlternativeGreeting/>\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW3\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${error ? s.error : ''} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${error ? s.errorInput : ''} ${className}` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    setChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n    checked?: boolean\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, setChecked, checked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n       onChange && onChange(e)\r\n\r\n       setChecked &&  setChecked(e.currentTarget.checked)\r\n\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n                checked={checked}\r\n                //checked={restProps.checked}\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\r\nimport s from './HW4.module.css'\r\nimport SuperButton from './common/c2-SuperButton/SuperButton'\r\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>('')\r\n    const error = text ? '' : 'error'\r\n\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text) // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)// ????\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 4\r\n\r\n            <div className={s.column}>\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    className={s.blue}\r\n                    spanClassName={s.blue}\r\n                />\r\n\r\n                <SuperInputText\r\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\r\n                />\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperButton>\r\n                    default\r\n                </SuperButton>\r\n\r\n                <SuperButton\r\n                    red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                <SuperButton disabled>\r\n                    disabled\r\n                </SuperButton>\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    setChecked={setChecked}\r\n                >\r\n                    some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW4\r\n","import React from 'react'\r\nimport HW1 from '../../h1/HW1'\r\nimport HW2 from '../../h2/HW2'\r\nimport HW3 from '../../h3/HW3'\r\nimport HW4 from '../../h4/HW4'\r\n\r\nfunction PreJunior() {\r\n    return (\r\n        <div>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>\r\n            {/*<HW6/>*/}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PreJunior\r\n\r\n// сделайте по аналогии пустые страницы джун и джун+\r\n// туда будут добавляться следующие дз","import React from 'react'\r\nimport { Switch } from 'react-router-dom'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { Route} from 'react-router-dom'\r\nimport Error404 from './pages/Error404'\r\nimport Junior from './pages/Junior'\r\nimport JuniorPlus from './pages/JuniorPlus'\r\nimport PreJunior from './pages/PreJunior'\r\n\r\nexport const PATH = {\r\n    PRE_JUNIOR: '/pre-junior',\r\n    JUNIOR: '/junior',\r\n    JUNIOR_PLUS: '/junior-plus'\r\n    \r\n}\r\n\r\nfunction Routes() {\r\n    return (\r\n        <div>\r\n            {/*Switch выбирает первый подходящий роут*/}\r\n            <Switch>\r\n\r\n            {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\r\n            {/*exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/}\r\n            <Route path={'/'} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>\r\n\r\n            <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>\r\n            <Route path={PATH.JUNIOR} render={() => <Junior/>}/>\r\n            <Route path={PATH.JUNIOR_PLUS} render={() => <JuniorPlus/>}/>\r\n               \r\n\r\n            {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\r\n            <Route render={() => <Error404/>}/>\r\n\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Routes\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { PATH } from './Routes'\r\nimport s from \"./Header.module.css\"\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className={s.header}>\r\n            <NavLink to={PATH.PRE_JUNIOR} className={s.link} activeClassName={s.active}> pre-junior </NavLink>\r\n            <NavLink to={PATH.JUNIOR} className={s.link} activeClassName={s.active}> junior </NavLink>\r\n            <NavLink to={PATH.JUNIOR_PLUS} className={s.link} activeClassName={s.active}> junior-plus </NavLink>\r\n            <div className={s.block} />\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { HashRouter } from 'react-router-dom'\r\nimport Header from './Header'\r\nimport Routes from './Routes'\r\n\r\nfunction HW5() {\r\n    return (\r\n        <div>\r\n            {/*в gh-pages лучше работает HashRouter*/}\r\n            <HashRouter>\r\n\r\n            <Header/>\r\n\r\n            <Routes/>\r\n\r\n            </HashRouter>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW5\r\n","import React from 'react'\r\nimport s from './App.module.css'\r\nimport HW1 from '../../../p2-homeworks/h1/HW1'\r\nimport HW2 from '../../../p2-homeworks/h2/HW2'\r\nimport HW3 from '../../../p2-homeworks/h3/HW3'\r\nimport HW4 from '../../../p2-homeworks/h4/HW4'\r\nimport HW5 from '../../../p2-homeworks/h5/HW5'\r\n\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div>react homeworks:</div>\r\n            {/* <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/> */}\r\n            <HW5/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        )\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister()\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './p1-main/m1-ui/u1-app/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}